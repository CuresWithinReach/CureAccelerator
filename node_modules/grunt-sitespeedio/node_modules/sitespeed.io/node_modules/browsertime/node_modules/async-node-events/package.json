{
  "name": "async-node-events",
  "description": "Asynchronous Node EventEmitter",
  "keywords": [
    "async",
    "events"
  ],
  "homepage": "http://github.com/joshuafcole/async-node-events",
  "author": {
    "name": "Joshua Cole",
    "email": "joshuafcole@gmail.com"
  },
  "version": "0.0.6",
  "bugs": {
    "url": "https://github.com/joshuafcole/async-node-events/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com:joshuafcole/async-node-events.git"
  },
  "main": "./lib/async-node-events",
  "dependencies": {
    "is-async": "0.0.2"
  },
  "devDependencies": {
    "chai": "^1.9.0",
    "mocha": "^1.18.0",
    "gulp": "^3.6.0",
    "gulp-mocha": "^0.4.1",
    "gulp-coverage": "^0.1.20",
    "gulp-coverage-reporter": "git+ssh://git@github.com:joshuafcole/gulp-coverage-reporter.git#0.0.1",
    "docco": "*"
  },
  "engines": {
    "node": ">=0.6"
  },
  "scripts": {
    "jshint": "./test/jshint.sh",
    "realpublish": "./prepublish.sh && npm publish",
    "test": "npm run jshint && nodeunit ./test/test-node.js"
  },
  "gitHead": "d32411f1f4df70c5dbe68d6a7861b5ed7fb539a3",
  "readme": "# async-node-events\n\nAn EventEmitter replacement that allows both asynchronous and synchronous emissions and handlers.\nThis is entirely based off of and almost entirely written by @dfellis in his excellent\n[async-cancelable-events](https://github.com/dfellis/async-cancelable-events) module. This is purely\na semantic change with some minor code revision. Even this README is primarily written by @dfellis.\n\nAll credit goes to @dfellis.\n\n## Install\n\n```sh\nnpm install async-node-events\n```\n\n## Usage\n\n```js\nvar EventEmitter = require('async-node-events');\nvar util = require('util');\n\nfunction MyEmittingObject() {\n    EventEmitter.call(this);\n    ...\n}\n\nutil.inherits(MyEmittingObject, EventEmitter);\n```\n\nThe API is intented to be a mostly-drop-in replacement for Node.js' EventEmitter object, except with support for node-styled async callbacks.\n\nThe primary differences between the EventEmitter and async-node-events are:\n\n1. If the last argument passed into ``this.emit`` is a function, it is assumed to be a callback that accepts accepts the typical (err, result) tuple.\n2. The ``.on`` and ``.once`` methods try to \"guess\" if the provided handler is synchronous or asynchronous (based on its argument length), or can be explicitly registered as synchronous or asynchronous with ``.onSync``, ``.onAsync``, ``.onceSync``, ``.onceAsync``.\n3. Passing the maximum number of listeners allowed will fire off a ``maxListenersPassed`` event with the event name and listener count as arguments. The warning the official ``EventEmitter`` prints is simply a listener for ``async-node-events``, and can be disabled by running ``this.removeAllListeners('maxListenersPassed')`` just after the ``EventEmitter.call(this)`` listed above.\n4. The various method calls are chainable, so ``foo.on('bar', func1).on('baz', func2)`` is valid.\n\nThe primary difference between async-cancelable-events and async-node-events is:\n1. The parameters of asynchronous callbacks use the node idiom of `callback(err:Error|Null, result:Any)` rather than `callback(continue:Boolean)`.\n\n## License (MIT)\n\nCopyright (C) 2012-2013 by David Ellis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "readme.md",
  "_id": "async-node-events@0.0.6",
  "_shasum": "815f908b0a4233c2fd532c4a5d69bd2ddc22d58f",
  "_from": "../../../../../var/folders/sc/gx6nvzpx0tvghbl1fy8217740000gn/T/npm-25912-69b5b47c/git-cache-bb4081275659/d32411f1f4df70c5dbe68d6a7861b5ed7fb539a3",
  "_resolved": "git+https://github.com/joshuafcole/async-node-events.git#d32411f1f4df70c5dbe68d6a7861b5ed7fb539a3"
}
